{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/alanrivera/nextjs-project-setup/app/api/v1/cars/search/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport async function POST(req: Request) {\n  const {\n    pickupLatitude,\n    pickupLongitude,\n    dropoffLatitude,\n    dropoffLongitude,\n    pickupDate, // not used by API, but may be later\n    dropoffDate,\n    pickupTime,\n    dropoffTime,\n    driverAge = 30,\n    currencyCode = \"USD\",\n    location = \"US\",\n  } = await req.json();\n\n  const url = new URL('https://booking-com15.p.rapidapi.com/api/v1/cars/searchCarRentals');\n  url.searchParams.append('pick_up_latitude', pickupLatitude);\n  url.searchParams.append('pick_up_longitude', pickupLongitude);\n  url.searchParams.append('drop_off_latitude', dropoffLatitude);\n  url.searchParams.append('drop_off_longitude', dropoffLongitude);\n  url.searchParams.append('pick_up_time', pickupTime);\n  url.searchParams.append('drop_off_time', dropoffTime);\n  url.searchParams.append('driver_age', driverAge.toString());\n  url.searchParams.append('currency_code', currencyCode);\n  url.searchParams.append('location', location);\n\n  try {\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': process.env.RAPIDAPI_KEY || '60adf17008msh63e4a1af385166bp1c2d84jsn4e4c2a9332dc',\n        'x-rapidapi-host': 'booking-com15.p.rapidapi.com',\n      },\n    });\n\n    if (!response.ok) {\n      return NextResponse.json({ error: `RapidAPI error: ${response.statusText}` }, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('API request failed:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,EACJ,cAAc,EACd,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,UAAU,EACV,WAAW,EACX,UAAU,EACV,WAAW,EACX,YAAY,EAAE,EACd,eAAe,KAAK,EACpB,WAAW,IAAI,EAChB,GAAG,MAAM,IAAI,IAAI;IAElB,MAAM,MAAM,IAAI,IAAI;IACpB,IAAI,YAAY,CAAC,MAAM,CAAC,oBAAoB;IAC5C,IAAI,YAAY,CAAC,MAAM,CAAC,qBAAqB;IAC7C,IAAI,YAAY,CAAC,MAAM,CAAC,qBAAqB;IAC7C,IAAI,YAAY,CAAC,MAAM,CAAC,sBAAsB;IAC9C,IAAI,YAAY,CAAC,MAAM,CAAC,gBAAgB;IACxC,IAAI,YAAY,CAAC,MAAM,CAAC,iBAAiB;IACzC,IAAI,YAAY,CAAC,MAAM,CAAC,cAAc,UAAU,QAAQ;IACxD,IAAI,YAAY,CAAC,MAAM,CAAC,iBAAiB;IACzC,IAAI,YAAY,CAAC,MAAM,CAAC,YAAY;IAEpC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,IAAI,QAAQ,IAAI;YAC3C,QAAQ;YACR,SAAS;gBACP,kBAAkB,QAAQ,GAAG,CAAC,YAAY,IAAI;gBAC9C,mBAAmB;YACrB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,gBAAgB,EAAE,SAAS,UAAU,EAAE;YAAC,GAAG;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAC1G;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}